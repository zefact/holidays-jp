const h = [
  [1, "元日", 1, 1, 1949],
  [1, "成人の日", 1, 15, 1949, 1999],
  [2, "成人の日", 1, [2, 1], 2e3],
  [1, "建国記念の日", 2, 11, 1967],
  [1, "天皇誕生日", 2, 23, 2020],
  [1, "昭和天皇の大喪の礼", 2, 24, 1989, 1989],
  [3, "春分の日"],
  [1, "皇太子明仁親王の結婚の儀", 4, 10, 1959, 1959],
  [1, "天皇誕生日", 4, 29, 1949, 1988],
  [1, "みどりの日", 4, 29, 1989, 2006],
  [1, "昭和の日", 4, 29, 2007],
  [1, "即位の日", 5, 1, 2019, 2019],
  [1, "憲法記念日", 5, 3, 1949],
  [1, "みどりの日", 5, 4, 2007],
  [1, "こどもの日", 5, 5, 1949],
  [1, "皇太子徳仁親王の結婚の儀", 6, 9, 1993, 1993],
  [1, "海の日", 7, 20, 1996, 2002],
  [2, "海の日", 7, [3, 1], 2003, 2019],
  [1, "海の日", 7, 23, 2020, 2020],
  [1, "海の日", 7, 22, 2021, 2021],
  [2, "海の日", 7, [3, 1], 2022],
  [1, "山の日", 8, 11, 2016, 2019],
  [1, "山の日", 8, 10, 2020, 2020],
  [1, "山の日", 8, 8, 2021, 2021],
  [1, "山の日", 8, 11, 2022],
  [1, "敬老の日", 9, 15, 1966, 2002],
  [2, "敬老の日", 9, [3, 1], 2003],
  [4, "秋分の日"],
  [1, "体育の日", 10, 10, 1966, 1999],
  [2, "体育の日", 10, [2, 1], 2e3, 2019],
  [1, "スポーツの日", 7, 24, 2020, 2020],
  [1, "スポーツの日", 7, 23, 2021, 2021],
  [2, "スポーツの日", 10, [2, 1], 2022],
  [1, "即位礼正殿の儀", 10, 22, 2019, 2019],
  [1, "文化の日", 11, 3, 1948],
  [1, "即位礼正殿の儀", 11, 12, 1990, 1990],
  [1, "勤労感謝の日", 11, 23, 1948],
  [1, "天皇誕生日", 12, 23, 1989, 2018]
];
let t = [];
const o = (e) => {
  let n = "";
  for (let r of h)
    if (!(r[4] && e.getFullYear() < r[4]) && !(r[5] && r[5] < e.getFullYear()) && !(r[0] === 3 && e.getFullYear() <= 1948) && !(r[0] === 4 && e.getFullYear() < 1948) && (r[0] === 1 && (n = i(e, r), n) || r[0] === 2 && (n = f(e, r), n) || r[0] === 3 && (n = Y(e, r), n) || r[0] === 4 && (n = y(e, r), n)))
      break;
  return n;
}, F = (e) => {
  let n = "";
  for (let r of t)
    if (!(r[4] && e.getFullYear() < r[4]) && !(r[5] && r[5] < e.getFullYear()) && (r[0] === 1 && (n = i(e, r), n) || r[0] === 2 && (n = f(e, r), n) || r[0] === 9 && (n = g(e, r), n)))
      break;
  return n;
}, i = (e, n) => e.getMonth() + 1 !== n[2] || e.getDate() !== n[3] ? "" : n[1], f = (e, n) => {
  const r = M(
    e.getFullYear(),
    n[2],
    n[3][0],
    n[3][1]
  );
  return e.getMonth() !== r.getMonth() || e.getDate() !== r.getDate() ? "" : n[1];
}, Y = (e, n) => {
  if (e.getMonth() + 1 !== 3 || e.getFullYear() <= 1948)
    return "";
  if (e.getFullYear() < 1980) {
    const l = [1960, 1964, 1968, 1972, 1976];
    return e.getDate() === 20 && l.includes(e.getFullYear()) || e.getDate() === 21 ? n[1] : "";
  }
  const r = Math.floor(20.8431 + 0.242194 * (e.getFullYear() - 1980)) - Math.floor((e.getFullYear() - 1980) / 4);
  return e.getDate() === r ? n[1] : "";
}, y = (e, n) => {
  if (e.getMonth() + 1 !== 9 || e.getFullYear() < 1948)
    return "";
  if (e.getFullYear() < 1980) {
    const l = [1951, 1955, 1959, 1963, 1967, 1971, 1975, 1979];
    return e.getDate() === 24 && l.includes(e.getFullYear()) || e.getDate() === 23 ? n[1] : "";
  }
  const r = Math.floor(23.2488 + 0.242194 * (e.getFullYear() - 1980)) - Math.floor((e.getFullYear() - 1980) / 4);
  return e.getDate() === r ? n[1] : "";
}, g = (e, n) => {
  const r = w(e);
  return n[2].includes(r) ? n[1] : "";
}, d = (e) => {
  const n = "振替休日";
  if (e.getFullYear() < 1973 || e.getFullYear() === 1973 && e.getMonth() + 1 < 4)
    return "";
  let r = new Date(e.getTime()), l = 0;
  for (; ; ) {
    if (e.getFullYear() < 2007 && l === -1 || (r.setDate(e.getDate() + --l), !o(r)))
      return "";
    if (r.getDay() === 0)
      return n;
  }
}, k = (e) => {
  const n = "国民の休日";
  if (e.getFullYear() < 1986)
    return "";
  let r = new Date(e.getTime());
  r.setDate(e.getDate() - 1);
  let l = new Date(e.getTime());
  return l.setDate(e.getDate() + 1), o(r) && o(l) ? n : "";
}, a = (e) => {
  const n = new Date(e);
  if (!isNaN(n.getDate()))
    return n;
  throw new Error("wrong date!");
}, w = (e) => {
  var n = e.getFullYear(), r = ("00" + (e.getMonth() + 1)).slice(-2), l = ("00" + e.getDate()).slice(-2);
  return n + "/" + r + "/" + l;
}, M = (e, n, r, l) => {
  const u = new Date(e, n - 1, 1), s = l < u.getDay() ? 7 : 0, c = r * 7 + (s - u.getDay()) - 7 + l;
  return u.setDate(u.getDate() + c), u;
}, b = (e) => {
  let n = "";
  const r = a(e);
  return n = o(r), n || (n = d(r), n) || (n = k(r), n) || t && (n = F(r), n), n;
}, m = (e) => {
  t = e;
}, _ = { isHoliday: b, setWorkingDefinitions: m };
export {
  _ as default
};
//# sourceMappingURL=holidays-jp.min.js.map
